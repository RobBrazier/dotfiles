#!/usr/bin/env bash

set -eo pipefail

echo "Installing pre-requisite packages"

# if [ -d '/nix' ]; then
#     echo "Nix already installed, skipping"
# else
#     sh <(curl -L https://nixos.org/nix/install) --daemon
# fi

# if [ -f /etc/bash.bashrc ]; then
#     source /etc/bash.bashrc
# fi

# if command -v home-manager; then
#     echo "Home Manager already installed, skipping"
# else
#     nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
#     nix-channel --update
#     export NIX_PATH=$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/root/channels${NIX_PATH:+:$NIX_PATH}
#     nix-shell '<home-manager>' -A install
# fi

github_download() {
    repo="$1"
    assetEnd="$2"
    extension="$3"
    query=".[0].assets | map(select(.name | endswith(\"$assetEnd\")))[0].id"
    githubResponse=$(curl -s https://api.github.com/repos/$repo/releases)
    assetId=`echo $githubResponse | jq "$query"`
    tempDir=$(mktemp -d)
    assetPath="$tempDir/$assetId.$extension"
    wget -q --auth-no-challenge --header='Accept:application/octet-stream' "https://api.github.com/repos/$repo/releases/assets/$assetId" -O "$assetPath"
    tar -xsf $assetPath -C $tempDir
    echo $tempDir
}

# Distros
{{ if eq (get .chezmoi.osRelease "idLike") "arch" -}}
{{ template "setup/arch.sh.tmpl" . }}
{{ else if eq (get .chezmoi.osRelease "idLike") "ubuntu debian" -}}
{{ template "setup/ubuntu.sh.tmpl" . }}
{{ else if eq (get .chezmoi.osRelease "id") "ubuntu" -}}
{{ template "setup/ubuntu.sh.tmpl" . }}
{{ else if eq (get .chezmoi.osRelease "id") "fedora" -}}
{{ template "setup/fedora.sh.tmpl" . }}
{{ end -}}