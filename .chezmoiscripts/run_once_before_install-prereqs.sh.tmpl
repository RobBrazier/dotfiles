#!/usr/bin/env bash
set -eo pipefail

echo "Installing pre-requisite packages"

github_download() {
    repo="$1"
    assetEnd="$2"
    extension="$3"
    query=".[0].assets | map(select(.name | endswith(\"$assetEnd\")))[0].id"
    githubResponse=$(curl -s https://api.github.com/repos/$repo/releases)
    assetId=`echo $githubResponse | jq "$query"`
    tempDir=$(mktemp -d)
    assetPath="$tempDir/$assetId.$extension"
    wget -q --auth-no-challenge --header='Accept:application/octet-stream' "https://api.github.com/repos/$repo/releases/assets/$assetId" -O "$assetPath"
    if [[ "$extension" == "zip" ]]; then
        unzip -qqd $tempDir $assetPath
    else
        tar -xsf $assetPath -C $tempDir
    fi
    rm $assetPath
    echo $tempDir
}

install_nerdfonts() {
    fonts=("SourceCodePro" "JetBrainsMono" "FiraCode" "FiraMono" "DroidSansMono")
    toInstall=$(IFS=$','; echo "${fonts[*]}")

    nerdFontsLatestVersion=$(curl -s https://api.github.com/repos/ryanoasis/nerd-fonts/releases | jq -r .[0].name)
    if [ ! -f $HOME/.local/share/fonts/.version ] || [[ "$(cat $HOME/.local/share/fonts/.version)" != "$nerdFontsLatestVersion" ]] || [[ "$(cat $HOME/.local/share/fonts/.installed)" != "$toInstall" ]]; then
        echo "Installing Nerd Fonts"
        tmpDir=$(mktemp -d)
        mkdir -p $tmpDir/patched-fonts
        wget -q "https://raw.githubusercontent.com/ryanoasis/nerd-fonts/master/install.sh" -O $tmpDir/install.sh
        for file in ${fonts[*]}; do
            echo "Downloading $file font"
            wget -q --auth-no-challenge "https://github.com/ryanoasis/nerd-fonts/releases/download/$nerdFontsLatestVersion/$file.zip" -O $tmpDir/$file.zip
            fontDir=$tmpDir/patched-fonts/$file
            mkdir -p $fontDir
            unzip -qqd $fontDir $tmpDir/$file.zip
        done
        bash $tmpDir/install.sh
        echo "$nerdFontsLatestVersion" > $HOME/.local/share/fonts/.version
        echo "$toInstall" > $HOME/.local/share/fonts/.installed
        rm -r $tmpDir
    else
        echo "Nerd Fonts already up-to-date. Skipping"
    fi
}

# Distros
{{ if or (has (get .chezmoi.osRelease "idLike") .distros.arch) (has (get .chezmoi.osRelease "id") .distros.arch) -}}
{{ template "setup/arch.sh.tmpl" . }}
{{ else if or (has (get .chezmoi.osRelease "idLike") .distros.ubuntu) (has (get .chezmoi.osRelease "id") .distros.ubuntu) -}}
{{ template "setup/ubuntu.sh.tmpl" . }}
{{ else if or (has (get .chezmoi.osRelease "idLike") .distros.fedora) (has (get .chezmoi.osRelease "id") .distros.fedora) -}}
{{ template "setup/fedora.sh.tmpl" . }}
{{ end -}}