#!/usr/bin/env bash

# Check dependencies are installed
program="$(basename $0)"
dependencies=(jq curl grep)
missingDeps=0
for dependency in ${dependencies[@]}; do
	if ! command -v $dependency >/dev/null 2>&1; then
		echo "$dependency not found. Please install before running."
		missingDeps=1
	fi
done
if [ $missingDeps -eq 1 ]; then
	exit 1
fi

extract_version() {
	input="$@"
	version="$(echo "$input" | grep -Eo '([0-9\.]+)')"

    # Count the number of dots in the version
    dots=$(echo "$version" | tr -cd '.' | wc -c)

    # Add missing parts with zeros
    if [ "$dots" -eq 0 ]; then
        # No dots, add two (e.g., 8 -> 8.0.0)
        version="${version}.0.0"
    elif [ "$dots" -eq 1 ]; then
        # One dot, add one more (e.g., 8.3 -> 8.3.0)
        version="${version}.0"
    fi

    echo "$version"
}

parse_version() {
	if ! command -v calibre >/dev/null 2>&1; then
		return 1
	fi
	extract_version "$(calibre --version)"
	return 0
}

get_latest_version() {
	tag_name=$(gh release -R kovidgoyal/calibre list -L 1 --json tagName | jq -r '.[].tagName')
	extract_version "$tag_name"
}

sub_help() {
	echo -e "Usage: $program <subcommand> [options]\n"
	echo "Subcommands:"
	echo "    version    View the current version installed"
	echo "    install    Install calibre"
	echo "    uninstall  Uninstall calibre"
	echo "    update     Update calibre to the latest version"
}

sub_version() {
	version="$(parse_version)"
	if [ $? -eq 1 ]; then
		echo "Calibre is not installed"
	else
		echo "Installed version: $version"
	fi
}

do_install() {
	output="$(mktemp)"
	trap "rm $output" EXIT
	curl -so "$output" "https://download.calibre-ebook.com/linux-installer.sh"
	sudo sh $output
}

sub_install() {
	current_version="$(parse_version)"
	if [ $? -eq 0 ]; then
		echo "Calibre is already installed - use '$program update' to update"
		exit 1
	fi
	do_install
}

sub_update() {
	new_version="$(get_latest_version)"
	current_version="$(parse_version)"
	if [ $? -ne 0 ]; then
		echo "Calibre is not installed - use '$program install' to install"
		exit 0
	fi
	if [ "$new_version" == "$current_version" ]; then
		echo "Already up to date!"
		exit 0
	fi
	echo "New version available: $current_version => $new_version"
	do_install
}

sub_uninstall() {
	if ! command -v calibre-uninstall >/dev/null 2>&1; then
		echo "Calibre is not installed"
		exit 1
	fi
	sudo calibre-uninstall
}

subcommand="$1"
case "$subcommand" in
	"" | "-h" | "--help")
		sub_help
		;;
	*)
		shift
		sub_${subcommand} $@
        if [ $? = 127 ]; then
            echo "Error: '$subcommand' is not a known subcommand." >&2
            echo "       Run '$program --help' for a list of known subcommands." >&2
            exit 1
        fi
		;;
esac
